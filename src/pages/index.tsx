/* eslint-disable @next/next/no-img-element */
import {
  home,
  eventListContainer,
  nation,
  eventNumber,
  cardContainer,
  farFromMe,
  eventLocation,
  card,
  // dataContainer,
  locationContainer,
  mainData,
  eventTextData,
  title,
  explain,
  eventImage,
  bottom,
  updateDate,
  howManySaw,
  shareButton,
} from '@/styles/home.css.ts';
import Head from 'next/head';
import BasicMap from '@/components/map';
// css
import { useUserStore } from '@/store/user';
import { logout } from '@/modules/service/auth';
import { EVENT_MOCK_DATA } from '../../public/data/event';
import { getIssues } from '@/modules/service/issues';

declare global {
  interface Window {
    kakao: any;
  }
}

export default function Home({ issues }) {
  const { accessToken, username, saveUser, removeUser } = useUserStore();
  const { data, current_total, total } = issues;

  const logoutUser = async () => {
    try {
      const response = await logout();
      console.log(response);
      if (response.status === 200) {
        return alert('로그아웃 성공');
      }
    } catch (error: any) {
      if (error.status === 400) {
        return alert('로그아웃 실패');
      }
      throw new Error(error);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={home}>
        {/* <div>{username}</div>
        <div>{username ? '회원' : '비회원'}</div>
        <button>
          <Link href="/login">로그인</Link>
        </button>
        <button>
          <Link href="/sign-up">회원가입</Link>
        </button>
        <button>
          <Link href="/password/find">비밀번호찾기</Link>
        </button>
        <button onClick={logoutUser}>로그아웃</button> */}
        <BasicMap locationData={data} />
        <div className={eventListContainer}>
          <div className={nation}>Korea</div>
          <div className={eventNumber}>사건, 사고 : {total}개</div>
          <div className={cardContainer}>
            {data.map(event => {
              return (
                <div key={event.id} className={card}>
                  <div className={locationContainer}>
                    <div className={farFromMe}>내 위치랑 얼마나 먼지</div>
                    <div>|</div>
                    <div className={eventLocation}>사건 위치</div>
                  </div>
                  <div className={mainData}>
                    <div className={eventTextData}>
                      <div className={title}>{event.issue_title}</div>
                      <div className={explain}>{event.issue_contents}</div>
                    </div>
                    <img src={event.image} className={eventImage} alt="" />
                  </div>
                  <div className={bottom}>
                    <div className={updateDate}>{event.updated_at}</div>
                    <div className={locationContainer}>
                      <div className={howManySaw}>몇명봤는지</div>
                      <button className={shareButton} type="button">
                        공유
                      </button>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </div>
      </main>
    </>
  );
}

export const getServerSideProps = async () => {
  try {
    // TODO 데이터 받으면 현재위치랑, 사건 위치랑 비교해서 값 새로 넣어서 데이터 반환해야함
    const data = await getIssues(1, 10);

    if (data.status === 200) {
      return {
        props: { issues: data },
      };
    }
  } catch (err) {
    return {
      notFound: false,
    };
  }
};
